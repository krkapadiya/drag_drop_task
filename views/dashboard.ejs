<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.15.0/Sortable.min.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f7fa;
            padding: 40px;
        }

        .container {
            max-width: 800px;
            margin: auto;
            background: #fff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.1);
        }
        .add-btn {
            display: inline-block;
            margin-bottom: 20px;
            background-color: #4a90e2;
            color: white;
            padding: 10px 18px;
            text-decoration: none;
            border-radius: 6px;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

    .add-btn:hover {
        background-color: #4a90e2;
    }


        h2 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }

        th, td {
            padding: 14px 18px;
            border-bottom: 1px solid #ddd;
            text-align: left;
        }

        th {
            background-color: #4a90e2;
            color: white;
        }

        tr:hover {
            background-color: #f1f1f1;
        }

        .no-users {
            text-align: center;
            color: #888;
            padding: 20px;
        }
    </style>
</head>
<body>

    <div class="container">
        <h2>User Dashboard</h2>
        <a href="/getform" class="add-btn"><i class="fas fa-user-plus"></i> Add User</a>

        <% if (users && users.length > 0) { %>
            <table id="userTable">
                <thead>
                    <tr>
                        <!-- <th>ID</th> -->
                        <th>Username</th>
                        <th>Email</th>
                        
                    </tr>
                </thead>
                <tbody>
                    <% users.forEach((user, index) => { %>
                        <tr data-id="<%= user._id %>">
                            <!-- <td><%= index + 1 %></td> -->
                            <td><%= user.user_name %></td>
                            <td><%= user.email %></td>
                            
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        <% } else { %>
            <div class="no-users">No users found.</div>
        <% } %>
    </div>

    <script src="/socket.io/socket.io.js"></script>

    <script>
        const socket = io();
        socket.emit('setuserroom', "<%= userId %>");
    
        const tbody = document.querySelector('#userTable tbody');
    
        new Sortable(tbody, {
            animation: 150,
            onEnd(evt) {
                const reorderedUserIds = Array.from(tbody.children).map(row => row.getAttribute('data-id'));
    
                fetch('/updateuserorder', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ userIds: reorderedUserIds })
                }).then(res => res.json())
                  .then(data => {
                      if (data.success) {
                          console.log("Order updated on server.");
                      } else {
                          console.error("Failed to update order.");
                      }
                  });
    
                socket.emit('reorderusers', { userId: "<%= userId %>", userIds: reorderedUserIds });

            }
        });
    
        socket.on('userorderupdated', newOrder => {
            const rowMap = {};
            Array.from(tbody.children).forEach(row => {
                rowMap[row.getAttribute('data-id')] = row;
            });

            tbody.innerHTML = '';
            newOrder.forEach(userId => {
                const row = rowMap[userId];
                if (row) {
                    tbody.appendChild(row);
                }
            });
        });

    </script>
</body>
</html>